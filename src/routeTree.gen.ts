/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PhotoIndexRouteImport } from './routes/photo.index'
import { Route as PhotoIdRouteImport } from './routes/photo.$id'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { ServerRoute as ApiDemoTqTodosServerRouteImport } from './routes/api.demo-tq-todos'
import { ServerRoute as ApiDemoNamesServerRouteImport } from './routes/api.demo-names'
import { ServerRoute as ApiImmichRandomPhotoServerRouteImport } from './routes/api.immich.randomPhoto'
import { ServerRoute as ApiImmichViewAssetIdServerRouteImport } from './routes/api.immich.viewAsset.$id'
import { ServerRoute as ApiImmichNearbyPhotosIdServerRouteImport } from './routes/api.immich.nearbyPhotos.$id'
import { ServerRoute as ApiImmichGetAssetIdServerRouteImport } from './routes/api.immich.getAsset.$id'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PhotoIndexRoute = PhotoIndexRouteImport.update({
  id: '/photo/',
  path: '/photo/',
  getParentRoute: () => rootRouteImport,
} as any)
const PhotoIdRoute = PhotoIdRouteImport.update({
  id: '/photo/$id',
  path: '/photo/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiDemoTqTodosServerRoute = ApiDemoTqTodosServerRouteImport.update({
  id: '/api/demo-tq-todos',
  path: '/api/demo-tq-todos',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoNamesServerRoute = ApiDemoNamesServerRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiImmichRandomPhotoServerRoute =
  ApiImmichRandomPhotoServerRouteImport.update({
    id: '/api/immich/randomPhoto',
    path: '/api/immich/randomPhoto',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiImmichViewAssetIdServerRoute =
  ApiImmichViewAssetIdServerRouteImport.update({
    id: '/api/immich/viewAsset/$id',
    path: '/api/immich/viewAsset/$id',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiImmichNearbyPhotosIdServerRoute =
  ApiImmichNearbyPhotosIdServerRouteImport.update({
    id: '/api/immich/nearbyPhotos/$id',
    path: '/api/immich/nearbyPhotos/$id',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiImmichGetAssetIdServerRoute =
  ApiImmichGetAssetIdServerRouteImport.update({
    id: '/api/immich/getAsset/$id',
    path: '/api/immich/getAsset/$id',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/photo/$id': typeof PhotoIdRoute
  '/photo': typeof PhotoIndexRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/photo/$id': typeof PhotoIdRoute
  '/photo': typeof PhotoIndexRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/photo/$id': typeof PhotoIdRoute
  '/photo/': typeof PhotoIndexRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/demo/tanstack-query'
    | '/photo/$id'
    | '/photo'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/demo/tanstack-query'
    | '/photo/$id'
    | '/photo'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  id:
    | '__root__'
    | '/'
    | '/demo/tanstack-query'
    | '/photo/$id'
    | '/photo/'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  PhotoIdRoute: typeof PhotoIdRoute
  PhotoIndexRoute: typeof PhotoIndexRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/immich/randomPhoto': typeof ApiImmichRandomPhotoServerRoute
  '/api/immich/getAsset/$id': typeof ApiImmichGetAssetIdServerRoute
  '/api/immich/nearbyPhotos/$id': typeof ApiImmichNearbyPhotosIdServerRoute
  '/api/immich/viewAsset/$id': typeof ApiImmichViewAssetIdServerRoute
}
export interface FileServerRoutesByTo {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/immich/randomPhoto': typeof ApiImmichRandomPhotoServerRoute
  '/api/immich/getAsset/$id': typeof ApiImmichGetAssetIdServerRoute
  '/api/immich/nearbyPhotos/$id': typeof ApiImmichNearbyPhotosIdServerRoute
  '/api/immich/viewAsset/$id': typeof ApiImmichViewAssetIdServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/immich/randomPhoto': typeof ApiImmichRandomPhotoServerRoute
  '/api/immich/getAsset/$id': typeof ApiImmichGetAssetIdServerRoute
  '/api/immich/nearbyPhotos/$id': typeof ApiImmichNearbyPhotosIdServerRoute
  '/api/immich/viewAsset/$id': typeof ApiImmichViewAssetIdServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/immich/randomPhoto'
    | '/api/immich/getAsset/$id'
    | '/api/immich/nearbyPhotos/$id'
    | '/api/immich/viewAsset/$id'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/immich/randomPhoto'
    | '/api/immich/getAsset/$id'
    | '/api/immich/nearbyPhotos/$id'
    | '/api/immich/viewAsset/$id'
  id:
    | '__root__'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/immich/randomPhoto'
    | '/api/immich/getAsset/$id'
    | '/api/immich/nearbyPhotos/$id'
    | '/api/immich/viewAsset/$id'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiDemoNamesServerRoute: typeof ApiDemoNamesServerRoute
  ApiDemoTqTodosServerRoute: typeof ApiDemoTqTodosServerRoute
  ApiImmichRandomPhotoServerRoute: typeof ApiImmichRandomPhotoServerRoute
  ApiImmichGetAssetIdServerRoute: typeof ApiImmichGetAssetIdServerRoute
  ApiImmichNearbyPhotosIdServerRoute: typeof ApiImmichNearbyPhotosIdServerRoute
  ApiImmichViewAssetIdServerRoute: typeof ApiImmichViewAssetIdServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/photo/': {
      id: '/photo/'
      path: '/photo'
      fullPath: '/photo'
      preLoaderRoute: typeof PhotoIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/photo/$id': {
      id: '/photo/$id'
      path: '/photo/$id'
      fullPath: '/photo/$id'
      preLoaderRoute: typeof PhotoIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/demo-tq-todos': {
      id: '/api/demo-tq-todos'
      path: '/api/demo-tq-todos'
      fullPath: '/api/demo-tq-todos'
      preLoaderRoute: typeof ApiDemoTqTodosServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/immich/randomPhoto': {
      id: '/api/immich/randomPhoto'
      path: '/api/immich/randomPhoto'
      fullPath: '/api/immich/randomPhoto'
      preLoaderRoute: typeof ApiImmichRandomPhotoServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/immich/viewAsset/$id': {
      id: '/api/immich/viewAsset/$id'
      path: '/api/immich/viewAsset/$id'
      fullPath: '/api/immich/viewAsset/$id'
      preLoaderRoute: typeof ApiImmichViewAssetIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/immich/nearbyPhotos/$id': {
      id: '/api/immich/nearbyPhotos/$id'
      path: '/api/immich/nearbyPhotos/$id'
      fullPath: '/api/immich/nearbyPhotos/$id'
      preLoaderRoute: typeof ApiImmichNearbyPhotosIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/immich/getAsset/$id': {
      id: '/api/immich/getAsset/$id'
      path: '/api/immich/getAsset/$id'
      fullPath: '/api/immich/getAsset/$id'
      preLoaderRoute: typeof ApiImmichGetAssetIdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  PhotoIdRoute: PhotoIdRoute,
  PhotoIndexRoute: PhotoIndexRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiDemoNamesServerRoute: ApiDemoNamesServerRoute,
  ApiDemoTqTodosServerRoute: ApiDemoTqTodosServerRoute,
  ApiImmichRandomPhotoServerRoute: ApiImmichRandomPhotoServerRoute,
  ApiImmichGetAssetIdServerRoute: ApiImmichGetAssetIdServerRoute,
  ApiImmichNearbyPhotosIdServerRoute: ApiImmichNearbyPhotosIdServerRoute,
  ApiImmichViewAssetIdServerRoute: ApiImmichViewAssetIdServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
